üçΩÔ∏è DOCUMENTA√á√ÉO DA API - RESTAURANTE NORDESTINO
==================================================

üìã INFORMA√á√ïES GERAIS
---------------------
Base URL: http://localhost:3000
Vers√£o: 1.0.0
Descri√ß√£o: API REST para controle de pratos e pedidos de um restaurante de comida nordestina

üîß CONFIGURA√á√ÉO
--------------
Para iniciar o servidor:
- npm install (instalar depend√™ncias)
- npm start (modo produ√ß√£o)
- npm run dev (modo desenvolvimento)

üìä BANCO DE DADOS
-----------------
- SQLite (database.sqlite)
- Tabelas: clientes, pratos, pedidos, pedido_pratos
- Dados de exemplo s√£o carregados automaticamente

üîê VALIDA√á√ïES
-------------
- CPF: Deve ser v√°lido e √∫nico
- Nome do prato: Apenas letras, 3-50 caracteres
- Pre√ßo: Valor positivo
- Quantidade: Valor positivo

üìö ROTAS DA API
===============

üè† ROTA PRINCIPAL
-----------------
GET / : Informa√ß√µes da API
{
    "message": "API do Restaurante Nordestino - ADS-Labs",
    "version": "1.0.0",
    "rotas": {
        "clientes": "/api/clientes",
        "pratos": "/api/pratos", 
        "pedidos": "/api/pedidos",
        "relatorios": "/api/relatorios"
    }
}

üë• GEST√ÉO DE CLIENTES
=====================

GET /api/clientes?ativo : Lista todos os clientes filtrado por active
{
    "nome": "string (2-100 caracteres)",
    "cpf": "string (CPF v√°lido)",
    "email": "string (email v√°lido)",
    "telefone": "string (15 caracteres)",
    "ativo": "boolean"
}
- Active √© um campo booleano que indica se o usu√°rio est√° ativo

GET /api/clientes/:id : Busca cliente por ID
{
    "id": "integer (ID do cliente)"
}

GET /api/clientes/cpf/:cpf : Busca cliente por CPF
{
    "cpf": "string (CPF do cliente)"
}

POST /api/clientes : Cria novo cliente
{
    "nome": "string (obrigat√≥rio, 2-100 caracteres)",
    "cpf": "string (obrigat√≥rio, CPF v√°lido e √∫nico)",
    "email": "string (opcional, email v√°lido)",
    "telefone": "string (opcional, 15 caracteres)"
}

PUT /api/clientes/:id : Atualiza cliente existente
{
    "nome": "string (2-100 caracteres)",
    "cpf": "string (CPF v√°lido e √∫nico)",
    "email": "string (email v√°lido)",
    "telefone": "string (15 caracteres)",
    "ativo": "boolean"
}

DELETE /api/clientes/:id : Remove cliente
{
    "id": "integer (ID do cliente)"
}

üçΩÔ∏è GEST√ÉO DE PRATOS
====================

GET /api/pratos?categoria&disponivel : Lista todos os pratos com filtros
{
    "nome": "string (3-50 caracteres, apenas letras)",
    "descricao": "string (opcional)",
    "preco": "decimal (obrigat√≥rio, > 0)",
    "categoria": "enum (entrada, principal, sobremesa, bebida)",
    "disponivel": "boolean",
    "imagem": "string (URL da imagem)"
}
- Categoria: Filtra por categoria do prato
- Disponivel: Filtra por disponibilidade

GET /api/pratos/:id : Busca prato por ID
{
    "id": "integer (ID do prato)"
}

GET /api/pratos/categoria/:categoria : Lista pratos por categoria
{
    "categoria": "string (entrada, principal, sobremesa, bebida)"
}

POST /api/pratos : Cria novo prato
{
    "nome": "string (obrigat√≥rio, 3-50 caracteres, apenas letras)",
    "descricao": "string (opcional)",
    "preco": "decimal (obrigat√≥rio, > 0)",
    "categoria": "enum (entrada, principal, sobremesa, bebida)",
    "imagem": "string (opcional, URL da imagem)"
}

PUT /api/pratos/:id : Atualiza prato existente
{
    "nome": "string (3-50 caracteres, apenas letras)",
    "descricao": "string",
    "preco": "decimal (> 0)",
    "categoria": "enum (entrada, principal, sobremesa, bebida)",
    "disponivel": "boolean",
    "imagem": "string (URL da imagem)"
}

PATCH /api/pratos/:id/disponibilidade : Altera disponibilidade do prato
{
    "disponivel": "boolean"
}

DELETE /api/pratos/:id : Remove prato
{
    "id": "integer (ID do prato)"
}

üìã GEST√ÉO DE PEDIDOS
====================

GET /api/pedidos?status&clienteId : Lista todos os pedidos com filtros
{
    "clienteId": "integer (ID do cliente)",
    "status": "enum (pendente, preparando, pronto, entregue, cancelado)",
    "total": "decimal (total do pedido)",
    "observacoes": "string (opcional)",
    "dataPedido": "datetime",
    "dataEntrega": "datetime (quando entregue)"
}
- Status: Filtra por status do pedido
- ClienteId: Filtra por cliente espec√≠fico

GET /api/pedidos/:id : Busca pedido por ID com detalhes
{
    "id": "integer (ID do pedido)"
}
- Retorna pedido com cliente e pratos relacionados

POST /api/pedidos : Cria novo pedido
{
    "clienteId": "integer (obrigat√≥rio, ID do cliente)",
    "pratos": [
        {
            "pratoId": "integer (ID do prato)",
            "quantidade": "integer (obrigat√≥rio, > 0)"
        }
    ],
    "observacoes": "string (opcional)"
}

PATCH /api/pedidos/:id/status : Atualiza status do pedido
{
    "status": "enum (pendente, preparando, pronto, entregue, cancelado)"
}

PATCH /api/pedidos/:id/cancelar : Cancela pedido
{
    "id": "integer (ID do pedido)"
}
- N√£o permite cancelar pedidos j√° entregues

DELETE /api/pedidos/:id : Remove pedido
{
    "id": "integer (ID do pedido)"
}

üìä RELAT√ìRIOS
=============

GET /api/relatorios/pratos-por-pedidos : Lista pratos ordenados por quantidade de pedidos
{
    "id": "integer (ID do prato)",
    "nome": "string (nome do prato)",
    "preco": "decimal (pre√ßo do prato)",
    "categoria": "string (categoria do prato)",
    "disponivel": "boolean",
    "quantidadePedidos": "integer (quantidade de pedidos)"
}
- Ordenado por quantidade de pedidos (decrescente)

GET /api/relatorios/top-clientes-pedidos : Top 5 clientes que mais fizeram pedidos
{
    "id": "integer (ID do cliente)",
    "nome": "string (nome do cliente)",
    "cpf": "string (CPF do cliente)",
    "quantidadePedidos": "integer (quantidade de pedidos)"
}
- Limite de 5 clientes
- Ordenado por quantidade de pedidos (decrescente)

GET /api/relatorios/top-clientes-gasto : Top 5 clientes que mais gastaram
{
    "id": "integer (ID do cliente)",
    "nome": "string (nome do cliente)",
    "cpf": "string (CPF do cliente)",
    "totalGasto": "decimal (total gasto pelo cliente)"
}
- Limite de 5 clientes
- Ordenado por total gasto (decrescente)
- Exclui pedidos cancelados

GET /api/relatorios/vendas?dataInicio&dataFim : Relat√≥rio geral de vendas
{
    "dataInicio": "string (YYYY-MM-DD, opcional)",
    "dataFim": "string (YYYY-MM-DD, opcional)"
}
- Retorna: per√≠odo, total de vendas, total de pedidos, ticket m√©dio, pedidos por status, top 5 pratos

GET /api/relatorios/faturamento-periodo?periodo : Faturamento por per√≠odo
{
    "periodo": "string (dia, semana, mes, ano, padr√£o: mes)"
}
- Retorna faturamento agrupado por per√≠odo

üîç EXEMPLOS DE USO
==================

1. Criar um cliente:
POST /api/clientes
{
    "nome": "Jo√£o Silva",
    "cpf": "12345678901",
    "email": "joao@email.com",
    "telefone": "(81) 99999-1111"
}

2. Criar um prato:
POST /api/pratos
{
    "nome": "Bai√£o de Dois",
    "descricao": "Arroz com feij√£o verde e carne seca",
    "preco": 25.90,
    "categoria": "principal"
}

3. Fazer um pedido:
POST /api/pedidos
{
    "clienteId": 1,
    "pratos": [
        {
            "pratoId": 1,
            "quantidade": 2
        },
        {
            "pratoId": 3,
            "quantidade": 1
        }
    ],
    "observacoes": "Sem cebola no bai√£o"
}

4. Atualizar status do pedido:
PATCH /api/pedidos/1/status
{
    "status": "preparando"
}

5. Gerar relat√≥rio de top clientes:
GET /api/relatorios/top-clientes-gasto

‚ö†Ô∏è C√ìDIGOS DE RESPOSTA
======================
- 200: Sucesso
- 201: Criado com sucesso
- 400: Erro de valida√ß√£o
- 404: Recurso n√£o encontrado
- 500: Erro interno do servidor

üìù PRATOS NORDESTINOS INCLU√çDOS
==============================
- Bai√£o de Dois
- Carne de Sol
- Vatap√°
- Acaraj√©
- Moqueca de Peixe
- Sarapatel
- Buchada de Bode
- Tapioca
- Cuscuz
- Queijo Coalho
- Bolo de Rolo
- Cocada
- Caldo de Cana
- Caju√≠na
- Mungunz√°

üéØ FUNCIONALIDADES IMPLEMENTADAS
================================
‚úÖ CRUD completo para Clientes, Pratos e Pedidos
‚úÖ Valida√ß√£o de CPF
‚úÖ Valida√ß√£o de nomes de pratos (apenas letras, 3-50 caracteres)
‚úÖ Relat√≥rios solicitados:
  - Pratos ordenados por quantidade de pedidos
  - Top 5 clientes que mais fizeram pedidos
  - Top 5 clientes que mais gastaram
‚úÖ Relat√≥rios extras:
  - Relat√≥rio geral de vendas
  - Faturamento por per√≠odo
‚úÖ Dados de exemplo com pratos nordestinos
‚úÖ Tratamento de erros
‚úÖ Valida√ß√µes de neg√≥cio
‚úÖ Transa√ß√µes para cria√ß√£o de pedidos 